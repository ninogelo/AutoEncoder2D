from graphviz import Digraph

def create_flowchart():
    dot = Digraph(format='png')
    dot.attr(rankdir='TB', size='10')

    # Nodes
    dot.node('1', 'Start', shape='ellipse')
    dot.node('2', 'Input Medical Image', shape='parallelogram')
    dot.node('3', 'Preprocessing')
    dot.node('4', 'Enhanced DWT')
    dot.node('5', 'Cayley Transform')
    dot.node('6', 'Optimized Filters')
    dot.node('7', 'Horizontal Filtering')
    dot.node('8', 'High-Pass Filter')
    dot.node('9', 'Downsample Columns by 2')
    dot.node('10', 'Low-Pass Filter')
    dot.node('11', 'Downsample Columns by 2')
    dot.node('12', 'Directional Filter Bank')
    dot.node('13', 'High-Pass Branch')
    dot.node('14', 'Vertical Filtering (Multi-Angle 30°)')
    dot.node('15', 'Downsample Rows by 2 → HH Subband')
    dot.node('16', 'Low-Pass Branch')
    dot.node('17', 'Vertical Filtering (Multi-Angle 60°)')
    dot.node('18', 'Downsample Rows by 2 → HL Subband')
    dot.node('19', 'High-Pass Branch (Second Stage)')
    dot.node('20', 'Vertical Filtering (Multi-Angle 90°)')
    dot.node('21', 'Downsample Rows by 2 → LH Subband')
    dot.node('22', 'Low-Pass Branch (Second Stage)')
    dot.node('23', 'Vertical Filtering (Multi-Angle 120°)')
    dot.node('24', 'Downsample Rows by 2 → LL Subband')
    dot.node('25', 'Level 2 Decomposition (Repeat on LL Subband)')
    dot.node('26', 'Adaptive Thresholding')
    dot.node('27', 'Applied to HH, HL, LH Subbands')
    dot.node('28', 'Autoencoder Compression (LL Subband)')
    dot.node('29', 'Inverse Enhanced DWT')
    dot.node('30', 'Uses Adaptive Thresholded HH, HL, LH and Compressed LL')
    dot.node('31', 'Reconstructed Image')
    dot.node('32', 'Evaluation Metrics')
    dot.node('33', 'PSNR / SSIM (Image Quality)')
    dot.node('34', 'Edge Coherence (Preserved Structures)')
    dot.node('35', 'Clinical Validation (Medical Accuracy)')

    # Correctly defining edges
    dot.edge('1', '2')
    dot.edge('2', '3')
    dot.edge('3', '4')
    dot.edge('4', '5')
    dot.edge('5', '6')
    dot.edge('6', '7')
    dot.edge('7', '8')
    dot.edge('8', '9')
    dot.edge('7', '10')
    dot.edge('10', '11')
    dot.edge('4', '12')
    dot.edge('12', '13')
    dot.edge('13', '14')
    dot.edge('14', '15')
    dot.edge('12', '16')
    dot.edge('16', '17')
    dot.edge('17', '18')
    dot.edge('12', '19')
    dot.edge('19', '20')
    dot.edge('20', '21')
    dot.edge('12', '22')
    dot.edge('22', '23')
    dot.edge('23', '24')
    dot.edge('24', '25')
    dot.edge('25', '26')
    dot.edge('26', '27')
    dot.edge('26', '28')
    dot.edge('28', '29')
    dot.edge('29', '30')
    dot.edge('30', '31')
    dot.edge('31', '32')
    dot.edge('32', '33')
    dot.edge('32', '34')
    dot.edge('32', '35')

    # Render the flowchart
    dot.render('enhanced_dwt_flowchart', format='png', cleanup=False)

# Run the function to create the flowchart
create_flowchart()
